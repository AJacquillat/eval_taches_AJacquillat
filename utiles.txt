Note sur les positions: tout est compté comme si c'était une chaine de caractère. Donc pas de position en 2D mais à une dimension. 

    Ifstring: pour lire un fichier 
getline(ifstream_objet, string_objet)   //donne tout le texte sur la ligne pointée par le pointeur 
ifile.tellg()     ::tellg(et) position ie celle où l'on écrit 
file.seekg( an_int )      //met le cxurseur de lecture à cette position 





    Ofstring: pour écrire dans un fichier 
ofile.tellp()    //tellp(ut) position ie nous dit où l'on écrit (put)
ofile.seekp( an_int , éventuellent ios::beg pour partir du début, ios::end; ios::cur)  //déplace le curseur d'écriture 
/!\: on insère pas mais on écrase donc pour l'état d'avancement, écrire 000%, 099%, 100% /// pour la priorité 1,2,3 ou H,M,L (high, medium, low)


istream& get (streambuf& sb, char delim);  //nous donne tout ce qu'il y a entre le seekg et le char delim (chez nous #)


le retour à la ligne compte pour deux caractères ('\n')
L'espace compte pour un caractère 


////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////
// Bon pour écrire la DATE et L'HEURE dans un fichier

#include <iostream>
#include <vector>
#include <fstream>
#include <string>
#include <ctime>
#include <ratio>
#include <chrono>
using namespace std;

int main()
{       
       
    chrono::system_clock::time_point today = chrono::system_clock::now();
    std::time_t tt;
    tt = chrono::system_clock::to_time_t ( today );
    std::cout << "today is: " << ctime(&tt);

    fstream file("test.txt", ios::in | ios::out | ios::ate);
    file<<ctime(&tt);

    return 0;
}



////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////
//// Eventuellement utile ///////////
/////////////////////////////////////
This example writes to a file everything the user types until a dot (.) is typed.
/////////////////////////////////////


// typewriter
#include <iostream>     // std::cin, std::cout
#include <fstream>      // std::ofstream

int main () {
  std::ofstream outfile ("test.txt");
  char ch;

  std::cout << "Type some text (type a dot to finish):\n";
  do {
    ch = std::cin.get();
    outfile.put(ch);
  } while (ch!='.');

  return 0;
}

/////////////////////////////////////////////////////////









/////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////
////////////////// LE BEST //////////////////////////////
/////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////




#include <iostream>
#include <vector>
#include <fstream>
#include <string>
using namespace std;
int main()
{   

    fstream file("test.txt", ios::in|ios::out|ios::ate);

    // get size of file
    file.seekg(0,file.end);
    int size = file.tellg();
    file.seekg (0); //on remet le curseur de lecture au début 
    cout<<size;

    //essayons d'écrire sur la première case du fichier et de remplacer le 'b' par un 'B'
    file.seekp(0, ios::beg);
    file<<"B";
    file.seekp(0,ios::end); //on essaie de se remettre à la fin 
    file<<" et vous?\n il me semble qu'il fait beau ajd'hui";

    file.close();
    file.close();
    return 0;
}


/////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////